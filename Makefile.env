

CFGmakeRun:=Makefile.run.go01


GoTOP:=go2019_0208_1414pm__udp_hold
GoTOP:= \
	udp_2201__Fn \
	udp_2301__Dn \

#	udp_0001_test_udp \
	#	udp_0997__server  udp_0998__client udp_0888__testOnly

GoTOP:=$(strip $(GoTOP))

#-----------====----====----
# the id must be 128 bytes : 16 byte
Fn_id128:=0xFF11afd83a8a8ac98a8d8a0183c811FF
Dn_id128:=0xDD22928381a88a7aa7d9a8d9182822DD
#Fn_id128:=8389afd83a8a8ac98a8d8a0183c839b1
#Dn_id128:=8381928381a88a7aa7d9a8d918289ab2
##---------====----====----====----====----


udp_0997__server:= udp_0997__server  udp_0901__type  
udp_0998__client:= udp_0998__client  udp_0901__type  
udp_0001_test_udp:= udp_0001_test_udp
udp_0888__testOnly:= 			\
	base_1121__Sprintf.go								\
	base_1122__Fprintf.go								\
	base_1123__Cprintf.go								\
 	\
	base_1103__checkError								\
	\
	base_1997__encode_decode__json						\
	base_1998__encode_decode__gob						\
	base_1999__encode_decode__bin						\
	\
	udp_0888__testOnly

udp___base:=											\
	base_1101__gen_md5_sha								\
	base_1102__sleep 									\
	base_1103__checkError 								\
	base_1104__checkInterface 							\
	base_1105__runCallback 								\
	base_1107__equal									\
	base_1108__nodeCount								\
	base_1110__string2int								\
	base_1111__http_get									\
	\
	base_1121__Sprintf									\
	base_1122__Fprintf									\
	base_1123__Cprintf									\
	base_1125__get_funcName								\
	base_1126__printf_hex								\
	\
	base_1201__config									\
	base_1202__handle_udpListen_Top 					\
	base_1203__get_self_md5_sha							\
	base_1204__udp_listen  								\
	\
	base_1210__tcpNode__data_const                      \
	base_1211__tcpNode__const                           \
	base_1212__tcpNode__listen                          \
	base_1213__tcpNode__send                            \
	base_1214__tcpNodeAccept__read                      \
	base_1216__tcpNodeAccept__top                       \
	base_1218__tcpNode__send_tester						\
	base_1219__tcpNode_irun                             \
	\
	base_1231__json_config                  	 		\
	base_1241__rand_init                  	 			\
	base_1242__rand_sleep                  	 			\
	base_1246__rand_gen_append	 						\
	base_1251__connect_to_server_to_handshake        	\
	base_1261__pwKey256                  	 			\
	\
	base_1401__udpNode_const	  						\
	base_1402__udpNode_data_const  						\
	base_1403__udpNode_default_rece  					\
	base_1404__udpNode_default_send 					\
	base_1405__udpNode_default_listen 					\
	base_1406__udpNode_default__gap 					\
	base_1408__udpNode__prKey							\
	base_1409__udpNode_default__init  					\
	\
	base_1411__udpGroup_const							\
	base_1413__udpGroup_default_rece					\
	base_1414__udpGroup_default_send_and_reconnect		\
	base_1415__udpGroup_default_listen					\
    base_1418__udpGroup__prKey							\
	base_1419__udpGroup__init__init						\
	\
    base_1421__decode_const                    			\
    base_1422__decode_default_udp_rece         			\
    base_1423__decode_default_udp_send         			\
    base_1425__decode_default_tryUdpConnect    			\
    base_1426__decode_default_gap_loop         			\
    base_1429__decode_default_irun             			\
	\
	base_1431__data_pack_base_struct					\
	base_1432__data_pack								\
	base_1435__data_depack								\
	base_1441__loginGenerator_struct					\
	base_1442__loginGenerator__chan_in					\
	base_1443__loginGenerator__connGen					\
	base_1444__loginGenerator__fillSend					\
	base_1445__loginGenerator__tryUpdownFromUri			\
	base_1449__loginGenerator_default_irun				\
	\
	base_1451__loginCheck_const 						\
	base_1452__loginCheck_standardCheck					\
	base_1453__loginCheck_step01__Dn2Fn                 \
	base_1454__loginCheck_step02__Fn2Dn                 \
	base_1455__loginCheck_step03__Dn2Fn                 \
	base_1456__loginCheck_step04__Fn                 	\
	base_1459__loginCheck_irun							\
	\
	base_1461__dataMachine_const 						\
	base_1462__dataMachine_receive						\
	base_1463__dataMachine_connPort						\
	base_1464__dataMachine_dataChanLock					\
	base_1465__dataMachine_dataSendIdle					\
	base_1466__dataMachine_dataResend					\
	base_1469__dataMachine_irun							\
	\
	base_1471__encode__const  							\
	base_1472__encode__genSend  						\
	base_1479__encode__irun								\
	\
	base_1490__gapFilter__const							\
	base_1491__gapFilter__check							\
	base_1492__gapFilter__chan_rece						\
	base_1493__gapFilter__timeDelay_gen					\
	base_1494__gapFilter__udpNode_rece					\
	base_1499__gapFilter__irun							\
	\
	base_1800__FnDnSnCn_const_struct					\
	base_1801__srvInfo_struct      						\
	base_1802__loginReq_struct      					\
	base_1803__dataTran_struct      					\
	base_1804__cmdMap_const	      						\
	udp_1899__FnDnSnCn_const_passwd						\
	\
	base_1981__read_write_file							\
	base_1990__encode_decode__test_dataLength			\
	base_1991__encode_decode__aes_cbc					\
	base_1992__encode_decode__rand_only					\
	base_1993__encode_decode__rand_aes					\
	base_1996__json_read_write  						\
	base_1997__encode_decode__json						\
	base_1998__encode_decode__gob						\
	base_1999__encode_decode__bin						\

udp_2201__Fn:=$(udp___base)								\
	\
	udp_2201__Fn 

udp_2301__Dn:=$(udp___base)								\
	\
	udp_2301__Dn

wputPATH:=ftp://coe:coe@192.168.1.93/


DockerList:=$(GoTOP)
# Makefile.1021.docker01

#		-p 127.0.0.1:5353:5353/udp -p 32001:32001/udp -p 32003:32003/udp 
rf1:=run_Fn_vim
$(rf1):= make vg DST=src2/udp_2201__Fn.go 

rf2:=run_Fn_test1_build_without_upload_docker
rf2:
	@echo
	rm -f lnx/udp_2201__Fn.lnx.LinuxX64.exe 
	make bl 
	@echo
	make noupload=1 dkb 
	make rf3

rf3:=run_Fn_test1_only
$(rf3):= nice -n 19 docker run  --memory-swappiness 0 -m 100m --rm -it \
	--network host -e id128=$(Fn_id128) \
	dengyanuoapp/udp2201fnlnxlinuxx64exe   \

rf4:=commit_gen_image_for__Fn
rf4:
	-docker image rmi udp_test/fn 2>/dev/null 
	docker commit \
		`docker ps -a |grep dengyanuoapp/udp2201fnlnxlinuxx64exe |head -n 1|awk '{print $$1}'` \
		udp_test/fn

rf5:=run_commit_gen_image_for__Fn
$(rf5):=nice -n 19 docker run  --memory-swappiness 0 -m 100m --rm -it --network host  udp_test/fn


uf1:=upload_docker_test1__Fn
$(uf1):= \
	nice -n 19 docker image rm -f dengyanuoapp/udp2201fnlnxlinuxx64exe \
	&& make dkb && md5sum lnx/udp_2201__Fn.lnx.LinuxX64.exe
ud1:=upload_docker_test1__Dn
$(ud1):= \
	nice -n 19 docker image rm -f dengyanuoapp/udp2301dnlnxlinuxx64exe   \
	&& make dkb && md5sum lnx/udp_2301__Dn.lnx.LinuxX64.exe

rd1:=run_Dn_vim
$(rd1):=make vg DST=src3/udp_2301__Dn.go 

rd2:=run_Dn_test1_build_without_upload_docker
rd2: 
	rm -f lnx/udp_2301__Dn.lnx.LinuxX64.exe 
	make bl 
	@echo
	make noupload=1 dkb 
	make rd3

rd3:=run_Dn_test2_only
$(rd3):= nice -n 19 docker run  --memory-swappiness 0 -m 100m --rm -it \
	--network host -e id128=$(Dn_id128) \
	dengyanuoapp/udp2301dnlnxlinuxx64exe   \

rd4:=commit_gen_image_for__Dn
rd4:
	-docker image rmi udp_test/dn 2>/dev/null 
	docker commit \
		`docker ps -a |grep dengyanuoapp/udp2301dnlnxlinuxx64exe|head -n 1|awk '{print $$1}'` \
		udp_test/dn

rd5:=run_commit_gen_image_for__Dn
$(rd5):=nice -n 19 docker run  --memory-swappiness 0 -m 100m --rm -it --network host  udp_test/dn

export rt_DST:=udp_7001__json_generator
export rt_DST1:=src7/$(rt_DST).go
export rt_DST2:=lnx/$(rt_DST).lnx.LinuxX64.exe
export rt_DST3:=$(shell echo $(rt_DST)|tr -d '[\\.\-_]' |tr [A-Z] [a-z])
rt_ENV:=

rt1:=testOnly__vim
$(rt1):=make vg DST=$(rt_DST1)
rt2:=testOnly__gen
$(rt2):=rm -f $(rt_DST2) && make bl && echo && make noupload=1 dkb
rt3:=testOnly__run
$(rt3):= time nice -n 19 docker run  --memory-swappiness 0 -m 100m --rm -it \
	--network host $(rt_ENV) \
	dengyanuoapp/$(rt_DST3)lnxlinuxx64exe   \

rt : rt9
rt9:=testOnly__all
$(rt9):=make rt1 rt2 rt3

rf9:=test_Fn_all
$(rf9):=make rf1 rf2 rf3

rd9:=test_Dn_all
$(rd9):=make rd1 rd2 rd3 

testList:= uf1 rf1 rf3  ud1 rd1 rd3  rf9 rd9    rf5 rd5    rt1 rt2 rt3 rt9
$(testList): 
	$($($@))

dbc:=docker_build_clean
$(dbc):= dkcc dkcn dkci     cl 
dbc:$($(dbc))

dbb:=docker_build_build
$(dbb):= bl     dkb
dbb:$($(dbb))

showRunHelpListLast += dbc dbb  $(testList) rf2 rd2

GoPreLinuxALL:= LinuxX64 
GoPreDockerALL:=LinuxX64 

bt: btgo
