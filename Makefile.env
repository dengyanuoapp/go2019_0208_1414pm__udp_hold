

CFGmakeRun:=Makefile.run.go01


GoTOP:=go2019_0208_1414pm__udp_hold
GoTOP:= udp_799__server  udp_899__client
udp_799__server:= udp_799__server  udp_101__type  
udp_899__client:= udp_899__client udp_101__type  

wputPATH:=ftp://coe:coe@192.168.1.93/


DockerList:=$(GoTOP)

ifdef DockerList
DockerSource?=dyn_empty_docker
#DockerSource:=scratchx
DockerSource:=$(strip $(DockerSource))
DockerSrc01:=$(strip $(shell docker images|grep $(DockerSource)|awk '{print $$3}'))
$(iinfo DockerSrc01:$(DockerSrc01))
$(if $(DockerSrc01),,\
	$(info )\
	$(info DockerSrc01 want [$(DockerSource)] null or not exist. exit)\
	$(info you should run the following command :)\
	$(info tar cv --files-from /dev/null | docker import - dyn_empty_docker)\
	$(info )\
	$(error DockerSrc01 want [$(DockerSource)] null or not exist. exit))

define DockerBuildTP02
@echo "#$1,$2"                             >> $3
@echo "FROM $(DockerSource) AS $2"         >> $3
@echo "COPY lnx/$1      /lnx/$1"           >> $3

@echo                                      >> $3

endef

define DockerBuildTP01
-docker rmi $2 2>/dev/null
cd lnx && tar cf - $1|docker import --change 'CMD ["/$1"]' - $2

endef

bd:
	$(foreach aa1,$(DockerList),\
	$(foreach aa2,$(GoPreDockerALL),\
	$(eval bb1:=$(aa1).lnx.$(aa2).exe)\
	$(eval bb2:=$(shell echo $(aa1).lnx.$(aa2).exe|tr [A-Z\-] [a-z_]))\
	$(call DockerBuildTP01,$(bb1),$(bb2))\
	))

#	@echo "_doing $(aa1) $(aa2) lnx/$(bb1) $(bb2)" ;\
#	exit 33$(EOL)\
#

cd:
	 @echo ; for aa1 in $$(docker images  |grep '<none>'  |awk '{print $$3}' ) ; do\
		 echo docker image rm $${aa1} ; \
		      docker image rm $${aa1} ; \
		 done
cc:
	@-for aa1 in $$(docker container ls -a |awk '{print $$1}'|grep -v ^CONTAINER) ; do\
		docker container rm $${aa1} ; \
		done

endif
