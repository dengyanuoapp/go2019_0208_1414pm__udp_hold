

CFGmakeRun:=Makefile.run.go01


GoTOP:=go2019_0208_1414pm__udp_hold
GoTOP:= \
	udp_2201__Fn \
	udp_2301__Dn \
	udp_2401__Cn \

#	udp_0001_test_udp \
	#	udp_0997__server  udp_0998__client udp_0888__testOnly

GoTOP:=$(strip $(GoTOP))

#-----------====----====----
# the id must be 128 bytes : 16 byte
Fn_id128:=0xFF11afd83a8a8ac98a8d8a0183c811FF
Dn_id128:=0xDD22928381a88a7aa7d9a8d9182822DD
#Fn_id128:=8389afd83a8a8ac98a8d8a0183c839b1
#Dn_id128:=8381928381a88a7aa7d9a8d918289ab2
##---------====----====----====----====----


udp_0997__server:= udp_0997__server  udp_0901__type  
udp_0998__client:= udp_0998__client  udp_0901__type  
udp_0001_test_udp:= udp_0001_test_udp
udp_0888__testOnly:= 			\
	base_1121__Sprintf.go								\
	base_1122__Fprintf.go								\
	base_1123__Cprintf.go								\
 	\
	base_1103__checkError								\
	\
	base_1997__encode_decode__json						\
	base_1998__encode_decode__gob						\
	base_1999__encode_decode__bin						\
	\
	udp_0888__testOnly

udp___base:=											\
	$(patsubst %.go,%,$(shell cd src0 && ls base_1*.go))								\
	udp_1899__FnDnSnCn_const_passwd

udp_2201__Fn:=$(udp___base)	udp_2201__Fn 
udp_2301__Dn:=$(udp___base)	udp_2301__Dn
udp_2401__Cn:=$(udp___base)	udp_2401__Cn

wputPATH:=ftp://coe:coe@192.168.1.93/


DockerList:=$(GoTOP)
# Makefile.1021.docker01



dbc:=docker_build_clean
$(dbc):= dkcc dkcn dkci     cl 
dbc:$($(dbc))

dbb:=docker_build_build
$(dbb):= bl     dkb
dbb:$($(dbb))

showRunHelpListLast += dbc dbb  $(testList) 

GoPreLinuxALL:= LinuxX64 
GoPreDockerALL:=LinuxX64 

bt: btgo


f:=udp_2201__Fn  src2
d:=udp_2301__Dn  src3
c:=udp_2401__Cn  src4

testListEnv:=f d c

define testTP1

aaa$(1)1:=$(word 1,$($(1)))
aaa$(1)2:=$(word 2,$($(1)))
aaa$(1)3:=$$(aaa$(1)2)/$$(aaa$(1)1).go

bbb$(1)1:=$$(shell echo $$(aaa$(1)1)|tr -d '[\\.\-_]' |tr [A-Z] [a-z])
bbb$(1)2:=dengyanuoapp/$$(bbb$(1)1)lnxlinuxx64exe
bbb$(1)3:=lnx/$$(aaa$(1)1).lnx.LinuxX64.exe

endef
define testTP2
r$(1)1:=run_vim__$(1)
$$(r$(1)1):= make vg DST=$$(aaa$(1)3)

r$(1)2:=run_build_without_upload_docker__$(1)
r$(1)2:
	@echo
	rm -f $$(bbb$(1)3)
	make bl 
	@echo
	make noupload=1 dkb 
#	make rf3


testList:= r$(1)1 

showRunHelpListLast += r$(1)1 r$(1)2 

endef

define testTP9
$$(eval $$(call testTP1,$(1)))
$$(eval $$(call testTP2,$(1)))

$$(testList): 
#	echo $$($$($$@))
	$$($$($$@))

endef

$(foreach aa1,$(testListEnv),$(eval $(call testTP9,$(aa1))))

$(info aaaf1:$(aaaf1))
$(info aaaf2:$(aaaf2))
$(info aaaf3:$(aaaf3))
$(info bbbf1:$(bbbf1))
$(info bbbf2:$(bbbf2))
$(info bbbf3:$(bbbf3))
$(info rf1:$(rf1):$($(rf1)))
$(info rf2:$(rf2):$($(rf2)))
$(info rf3:$(rf3):$($(rf3)))
$(info udp___base:$(udp___base):$($(udp___base)))


define comment01




showRunHelpListLast += rf2 rd2

f:=udp_2201__Fn 

lnx/udp_2201__Fn.lnx.LinuxX64.exe 


	nice -n 19 docker image rm -f dengyanuoapp/
	udp2201fnlnxlinuxx64exe \
	&& make dkb && md5sum lnx/udp_2201__Fn.lnx.LinuxX64.exe

ud1:=upload_docker_test1__Dn
$(ud1):= \
	nice -n 19 docker image rm -f dengyanuoapp/udp2301dnlnxlinuxx64exe   \
#		-p 127.0.0.1:5353:5353/udp -p 32001:32001/udp -p 32003:32003/udp 
rf1:=run_Fn_vim
$(rf1):= make vg DST=src2/udp_2201__Fn.go 

rf2:=run_Fn_test1_build_without_upload_docker
rf2:
	@echo
	rm -f lnx/udp_2201__Fn.lnx.LinuxX64.exe 
	make bl 
	@echo
	make noupload=1 dkb 
	#make rf3

rf3:=run_Fn_test1_only
$(rf3):= nice -n 19 docker run  --memory-swappiness 0 -m 100m --rm -it \
	--network host -e id128=$(Fn_id128) \
	--name run_Fn \
	dengyanuoapp/udp2201fnlnxlinuxx64exe   \

rf4:=commit_gen_image_for__Fn
rf4:
	-docker image rmi udp_test/fn 2>/dev/null 
	docker commit \
		`docker ps -a |grep dengyanuoapp/udp2201fnlnxlinuxx64exe |head -n 1|awk '{print $$1}'` \
		udp_test/fn


uf1:=upload_docker_test1__Fn
$(uf1):= \
	nice -n 19 docker image rm -f dengyanuoapp/udp2201fnlnxlinuxx64exe \
	&& make dkb && md5sum lnx/udp_2201__Fn.lnx.LinuxX64.exe
ud1:=upload_docker_test1__Dn
$(ud1):= \
	nice -n 19 docker image rm -f dengyanuoapp/udp2301dnlnxlinuxx64exe   \
	&& make dkb && md5sum lnx/udp_2301__Dn.lnx.LinuxX64.exe

rf5:=run_commit_gen_image_for__Fn
$(rf5):=nice -n 19 docker run  --memory-swappiness 0 -m 100m --rm -it --network host  udp_test/fn

rd5:=run_commit_gen_image_for__Dn
$(rd5):=nice -n 19 docker run  --memory-swappiness 0 -m 100m --rm -it --network host  udp_test/dn


rd1:=run_Dn_vim
$(rd1):=make vg DST=src3/udp_2301__Dn.go 

rd2:=run_Dn_test1_build_without_upload_docker
rd2: 
	rm -f lnx/udp_2301__Dn.lnx.LinuxX64.exe 
	make bl 
	@echo
	make noupload=1 dkb 
	#make rd3

rd3:=run_Dn_test2_only
$(rd3):= nice -n 19 docker run  --memory-swappiness 0 -m 100m --rm -it \
	--network host -e id128=$(Dn_id128) \
	--name run_Dn \
	dengyanuoapp/udp2301dnlnxlinuxx64exe   \

rd4:=commit_gen_image_for__Dn
rd4:
	-docker image rmi udp_test/dn 2>/dev/null 
	docker commit \
		`docker ps -a |grep dengyanuoapp/udp2301dnlnxlinuxx64exe|head -n 1|awk '{print $$1}'` \
		udp_test/dn

export rt_DST:=udp_7001__json_generator
export rt_DST1:=src7/$(rt_DST).go
export rt_DST2:=lnx/$(rt_DST).lnx.LinuxX64.exe
export rt_DST3:=$(shell echo $(rt_DST)|tr -d '[\\.\-_]' |tr [A-Z] [a-z])
rt_ENV:=

rt1:=testOnly__vim
$(rt1):=make vg DST=$(rt_DST1)
rt2:=testOnly__gen
$(rt2):=rm -f $(rt_DST2) && make bl && echo && make noupload=1 dkb
rt3:=testOnly__run
$(rt3):= time nice -n 19 docker run  --memory-swappiness 0 -m 100m --rm -it \
	--network host $(rt_ENV) \
	dengyanuoapp/$(rt_DST3)lnxlinuxx64exe   \

rt : rt9
rt9:=testOnly__all
$(rt9):=make rt1 rt2 rt3

rf9:=test_Fn_all
$(rf9):=make rf1 rf2 rf3

rd9:=test_Dn_all
$(rd9):=make rd1 rd2 rd3 

src_update_List:=src2 src3 src4
su:=src_update
#$(su):=echo $(src_update_List)
$(su):
	$(foreach aa1,$(src_update_List),cd $(aa1) && rm -f base_1*.go && ln -s ../src0/base_*.go ./ $(EOL))

testList:= uf1 ud1  rf1 rf3  rf9   rd1 rd3 rd9    rf5 rd5    rt1 rt2 rt3 rt9     rc1 rc2 rc3 rc9   su
$(testList): 
	$($($@))

endef
